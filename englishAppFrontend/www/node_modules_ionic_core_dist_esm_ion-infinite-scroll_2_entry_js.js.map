{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, w as writeTask, e as readTask, h, i as getElement, f as Host } from './index-4e02bb5d.js';\nimport { f as findClosestIonContent, p as printIonContentErrorMsg, g as getScrollElement } from './index-5cc724f3.js';\nimport { b as getIonMode, c as config } from './ionic-global-8f9440ec.js';\nimport { E as ENABLE_HTML_CONTENT_DEFAULT, a as sanitizeDOMString } from './config-49c88215.js';\nimport './helpers-da915de8.js';\nimport './index-9b0d46f4.js';\n\nconst infiniteScrollCss = \"ion-infinite-scroll{display:none;width:100%}.infinite-scroll-enabled{display:block}\";\nconst IonInfiniteScrollStyle0 = infiniteScrollCss;\n\nconst InfiniteScroll = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionInfinite = createEvent(this, \"ionInfinite\", 7);\n        this.thrPx = 0;\n        this.thrPc = 0;\n        /**\n         * didFire exists so that ionInfinite\n         * does not fire multiple times if\n         * users continue to scroll after\n         * scrolling into the infinite\n         * scroll threshold.\n         */\n        this.didFire = false;\n        this.isBusy = false;\n        this.onScroll = () => {\n            const scrollEl = this.scrollEl;\n            if (!scrollEl || !this.canStart()) {\n                return 1;\n            }\n            const infiniteHeight = this.el.offsetHeight;\n            if (infiniteHeight === 0) {\n                // if there is no height of this element then do nothing\n                return 2;\n            }\n            const scrollTop = scrollEl.scrollTop;\n            const scrollHeight = scrollEl.scrollHeight;\n            const height = scrollEl.offsetHeight;\n            const threshold = this.thrPc !== 0 ? height * this.thrPc : this.thrPx;\n            const distanceFromInfinite = this.position === 'bottom'\n                ? scrollHeight - infiniteHeight - scrollTop - threshold - height\n                : scrollTop - infiniteHeight - threshold;\n            if (distanceFromInfinite < 0) {\n                if (!this.didFire) {\n                    this.isLoading = true;\n                    this.didFire = true;\n                    this.ionInfinite.emit();\n                    return 3;\n                }\n            }\n            return 4;\n        };\n        this.isLoading = false;\n        this.threshold = '15%';\n        this.disabled = false;\n        this.position = 'bottom';\n    }\n    thresholdChanged() {\n        const val = this.threshold;\n        if (val.lastIndexOf('%') > -1) {\n            this.thrPx = 0;\n            this.thrPc = parseFloat(val) / 100;\n        }\n        else {\n            this.thrPx = parseFloat(val);\n            this.thrPc = 0;\n        }\n    }\n    disabledChanged() {\n        const disabled = this.disabled;\n        if (disabled) {\n            this.isLoading = false;\n            this.isBusy = false;\n        }\n        this.enableScrollEvents(!disabled);\n    }\n    async connectedCallback() {\n        const contentEl = findClosestIonContent(this.el);\n        if (!contentEl) {\n            printIonContentErrorMsg(this.el);\n            return;\n        }\n        this.scrollEl = await getScrollElement(contentEl);\n        this.thresholdChanged();\n        this.disabledChanged();\n        if (this.position === 'top') {\n            writeTask(() => {\n                if (this.scrollEl) {\n                    this.scrollEl.scrollTop = this.scrollEl.scrollHeight - this.scrollEl.clientHeight;\n                }\n            });\n        }\n    }\n    disconnectedCallback() {\n        this.enableScrollEvents(false);\n        this.scrollEl = undefined;\n    }\n    /**\n     * Call `complete()` within the `ionInfinite` output event handler when\n     * your async operation has completed. For example, the `loading`\n     * state is while the app is performing an asynchronous operation,\n     * such as receiving more data from an AJAX request to add more items\n     * to a data list. Once the data has been received and UI updated, you\n     * then call this method to signify that the loading has completed.\n     * This method will change the infinite scroll's state from `loading`\n     * to `enabled`.\n     */\n    async complete() {\n        const scrollEl = this.scrollEl;\n        if (!this.isLoading || !scrollEl) {\n            return;\n        }\n        this.isLoading = false;\n        if (this.position === 'top') {\n            /**\n             * New content is being added at the top, but the scrollTop position stays the same,\n             * which causes a scroll jump visually. This algorithm makes sure to prevent this.\n             * (Frame 1)\n             *    - complete() is called, but the UI hasn't had time to update yet.\n             *    - Save the current content dimensions.\n             *    - Wait for the next frame using _dom.read, so the UI will be updated.\n             * (Frame 2)\n             *    - Read the new content dimensions.\n             *    - Calculate the height difference and the new scroll position.\n             *    - Delay the scroll position change until other possible dom reads are done using _dom.write to be performant.\n             * (Still frame 2, if I'm correct)\n             *    - Change the scroll position (= visually maintain the scroll position).\n             *    - Change the state to re-enable the InfiniteScroll.\n             *    - This should be after changing the scroll position, or it could\n             *    cause the InfiniteScroll to be triggered again immediately.\n             * (Frame 3)\n             *    Done.\n             */\n            this.isBusy = true;\n            // ******** DOM READ ****************\n            // Save the current content dimensions before the UI updates\n            const prev = scrollEl.scrollHeight - scrollEl.scrollTop;\n            // ******** DOM READ ****************\n            requestAnimationFrame(() => {\n                readTask(() => {\n                    // UI has updated, save the new content dimensions\n                    const scrollHeight = scrollEl.scrollHeight;\n                    // New content was added on top, so the scroll position should be changed immediately to prevent it from jumping around\n                    const newScrollTop = scrollHeight - prev;\n                    // ******** DOM WRITE ****************\n                    requestAnimationFrame(() => {\n                        writeTask(() => {\n                            scrollEl.scrollTop = newScrollTop;\n                            this.isBusy = false;\n                            this.didFire = false;\n                        });\n                    });\n                });\n            });\n        }\n        else {\n            this.didFire = false;\n        }\n    }\n    canStart() {\n        return !this.disabled && !this.isBusy && !!this.scrollEl && !this.isLoading;\n    }\n    enableScrollEvents(shouldListen) {\n        if (this.scrollEl) {\n            if (shouldListen) {\n                this.scrollEl.addEventListener('scroll', this.onScroll);\n            }\n            else {\n                this.scrollEl.removeEventListener('scroll', this.onScroll);\n            }\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        const disabled = this.disabled;\n        return (h(Host, { key: '1444429a86950c449953cbf578436cc8cabf40ec', class: {\n                [mode]: true,\n                'infinite-scroll-loading': this.isLoading,\n                'infinite-scroll-enabled': !disabled,\n            } }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"threshold\": [\"thresholdChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nInfiniteScroll.style = IonInfiniteScrollStyle0;\n\nconst infiniteScrollContentIosCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px;margin-top:4px;margin-bottom:0}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-ios .infinite-loading-text{color:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666))}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-small-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666))}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666))}\";\nconst IonInfiniteScrollContentIosStyle0 = infiniteScrollContentIosCss;\n\nconst infiniteScrollContentMdCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px;margin-top:4px;margin-bottom:0}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-md .infinite-loading-text{color:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666))}.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-small-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666))}.infinite-scroll-content-md .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666))}\";\nconst IonInfiniteScrollContentMdStyle0 = infiniteScrollContentMdCss;\n\nconst InfiniteScrollContent = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.customHTMLEnabled = config.get('innerHTMLTemplatesEnabled', ENABLE_HTML_CONTENT_DEFAULT);\n        this.loadingSpinner = undefined;\n        this.loadingText = undefined;\n    }\n    componentDidLoad() {\n        if (this.loadingSpinner === undefined) {\n            const mode = getIonMode(this);\n            this.loadingSpinner = config.get('infiniteLoadingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'crescent'));\n        }\n    }\n    renderLoadingText() {\n        const { customHTMLEnabled, loadingText } = this;\n        if (customHTMLEnabled) {\n            return h(\"div\", { class: \"infinite-loading-text\", innerHTML: sanitizeDOMString(loadingText) });\n        }\n        return h(\"div\", { class: \"infinite-loading-text\" }, this.loadingText);\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '060278bf9cb0321e182352f9613be4ebbb028259', class: {\n                [mode]: true,\n                // Used internally for styling\n                [`infinite-scroll-content-${mode}`]: true,\n            } }, h(\"div\", { key: '07d3cada920145f979ad315bd187fb878e0c3da3', class: \"infinite-loading\" }, this.loadingSpinner && (h(\"div\", { key: '6254f175d7543d09f3dd47cd0589a2809182cd8c', class: \"infinite-loading-spinner\" }, h(\"ion-spinner\", { key: 'a6a816d1c65b60b786333b209b63492aa716a283', name: this.loadingSpinner }))), this.loadingText !== undefined && this.renderLoadingText())));\n    }\n};\nInfiniteScrollContent.style = {\n    ios: IonInfiniteScrollContentIosStyle0,\n    md: IonInfiniteScrollContentMdStyle0\n};\n\nexport { InfiniteScroll as ion_infinite_scroll, InfiniteScrollContent as ion_infinite_scroll_content };\n"],"names":["r","registerInstance","d","createEvent","w","writeTask","e","readTask","h","i","getElement","f","Host","findClosestIonContent","p","printIonContentErrorMsg","g","getScrollElement","b","getIonMode","c","config","E","ENABLE_HTML_CONTENT_DEFAULT","a","sanitizeDOMString","infiniteScrollCss","IonInfiniteScrollStyle0","InfiniteScroll","constructor","hostRef","ionInfinite","thrPx","thrPc","didFire","isBusy","onScroll","scrollEl","canStart","infiniteHeight","el","offsetHeight","scrollTop","scrollHeight","height","threshold","distanceFromInfinite","position","isLoading","emit","disabled","thresholdChanged","val","lastIndexOf","parseFloat","disabledChanged","enableScrollEvents","connectedCallback","_this","_asyncToGenerator","contentEl","clientHeight","disconnectedCallback","undefined","complete","_this2","prev","requestAnimationFrame","newScrollTop","shouldListen","addEventListener","removeEventListener","render","mode","key","class","watchers","style","infiniteScrollContentIosCss","IonInfiniteScrollContentIosStyle0","infiniteScrollContentMdCss","IonInfiniteScrollContentMdStyle0","InfiniteScrollContent","customHTMLEnabled","get","loadingSpinner","loadingText","componentDidLoad","renderLoadingText","innerHTML","name","ios","md","ion_infinite_scroll","ion_infinite_scroll_content"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}