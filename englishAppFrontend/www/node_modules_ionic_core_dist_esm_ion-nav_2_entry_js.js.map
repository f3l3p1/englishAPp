{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, h, i as getElement, f as Host } from './index-4e02bb5d.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-fe2083dc.js';\nimport { m as assert, s as shallowEqualStringMap } from './helpers-da915de8.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-8579e7fd.js';\nimport { b as getIonMode, c as config } from './ionic-global-8f9440ec.js';\nimport { a as attachComponent } from './framework-delegate-63d1a679.js';\nimport './index-9b0d46f4.js';\n\nconst VIEW_STATE_NEW = 1;\nconst VIEW_STATE_ATTACHED = 2;\nconst VIEW_STATE_DESTROYED = 3;\n// TODO(FW-2832): types\nclass ViewController {\n    constructor(component, params) {\n        this.component = component;\n        this.params = params;\n        this.state = VIEW_STATE_NEW;\n    }\n    async init(container) {\n        this.state = VIEW_STATE_ATTACHED;\n        if (!this.element) {\n            const component = this.component;\n            this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\n        }\n    }\n    /**\n     * DOM WRITE\n     */\n    _destroy() {\n        assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n        const element = this.element;\n        if (element) {\n            if (this.delegate) {\n                this.delegate.removeViewFromDom(element.parentElement, element);\n            }\n            else {\n                element.remove();\n            }\n        }\n        this.nav = undefined;\n        this.state = VIEW_STATE_DESTROYED;\n    }\n}\nconst matches = (view, id, params) => {\n    if (!view) {\n        return false;\n    }\n    if (view.component !== id) {\n        return false;\n    }\n    return shallowEqualStringMap(view.params, params);\n};\nconst convertToView = (page, params) => {\n    if (!page) {\n        return null;\n    }\n    if (page instanceof ViewController) {\n        return page;\n    }\n    return new ViewController(page, params);\n};\nconst convertToViews = (pages) => {\n    return pages\n        .map((page) => {\n        if (page instanceof ViewController) {\n            return page;\n        }\n        if ('component' in page) {\n            return convertToView(page.component, page.componentProps === null ? undefined : page.componentProps);\n        }\n        return convertToView(page, undefined);\n    })\n        .filter((v) => v !== null);\n};\n\nconst navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;z-index:0}\";\nconst IonNavStyle0 = navCss;\n\nconst Nav = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n        this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n        this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n        this.transInstr = [];\n        this.gestureOrAnimationInProgress = false;\n        this.useRouter = false;\n        this.isTransitioning = false;\n        this.destroyed = false;\n        this.views = [];\n        this.didLoad = false;\n        this.delegate = undefined;\n        this.swipeGesture = undefined;\n        this.animated = true;\n        this.animation = undefined;\n        this.rootParams = undefined;\n        this.root = undefined;\n    }\n    swipeGestureChanged() {\n        if (this.gesture) {\n            this.gesture.enable(this.swipeGesture === true);\n        }\n    }\n    rootChanged() {\n        if (this.root === undefined) {\n            return;\n        }\n        if (this.didLoad === false) {\n            /**\n             * If the component has not loaded yet, we can skip setting up the root component.\n             * It will be called when `componentDidLoad` fires.\n             */\n            return;\n        }\n        if (!this.useRouter) {\n            if (this.root !== undefined) {\n                this.setRoot(this.root, this.rootParams);\n            }\n        }\n    }\n    componentWillLoad() {\n        this.useRouter = document.querySelector('ion-router') !== null && this.el.closest('[no-router]') === null;\n        if (this.swipeGesture === undefined) {\n            const mode = getIonMode(this);\n            this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n        }\n        this.ionNavWillLoad.emit();\n    }\n    async componentDidLoad() {\n        // We want to set this flag before any watch callbacks are manually called\n        this.didLoad = true;\n        this.rootChanged();\n        this.gesture = (await import('./swipe-back-e5394307.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n        this.swipeGestureChanged();\n    }\n    connectedCallback() {\n        this.destroyed = false;\n    }\n    disconnectedCallback() {\n        for (const view of this.views) {\n            lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            view._destroy();\n        }\n        // Release swipe back gesture and transition.\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.transInstr.length = 0;\n        this.views.length = 0;\n        this.destroyed = true;\n    }\n    /**\n     * Push a new component onto the current navigation stack. Pass any additional\n     * information along as an object. This additional information is accessible\n     * through NavParams.\n     *\n     * @param component The component to push onto the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    push(component, componentProps, opts, done) {\n        return this.insert(-1, component, componentProps, opts, done);\n    }\n    /**\n     * Inserts a component into the navigation stack at the specified index.\n     * This is useful to add a component at any point in the navigation stack.\n     *\n     * @param insertIndex The index to insert the component at in the stack.\n     * @param component The component to insert into the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    insert(insertIndex, component, componentProps, opts, done) {\n        return this.insertPages(insertIndex, [{ component, componentProps }], opts, done);\n    }\n    /**\n     * Inserts an array of components into the navigation stack at the specified index.\n     * The last component in the array will become instantiated as a view, and animate\n     * in to become the active view.\n     *\n     * @param insertIndex The index to insert the components at in the stack.\n     * @param insertComponents The components to insert into the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    insertPages(insertIndex, insertComponents, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: insertComponents,\n            opts,\n        }, done);\n    }\n    /**\n     * Pop a component off of the navigation stack. Navigates back from the current\n     * component.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    pop(opts, done) {\n        return this.removeIndex(-1, 1, opts, done);\n    }\n    /**\n     * Pop to a specific index in the navigation stack.\n     *\n     * @param indexOrViewCtrl The index or view controller to pop to.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    popTo(indexOrViewCtrl, opts, done) {\n        const ti = {\n            removeStart: -1,\n            removeCount: -1,\n            opts,\n        };\n        if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n            ti.removeView = indexOrViewCtrl;\n            ti.removeStart = 1;\n        }\n        else if (typeof indexOrViewCtrl === 'number') {\n            ti.removeStart = indexOrViewCtrl + 1;\n        }\n        return this.queueTrns(ti, done);\n    }\n    /**\n     * Navigate back to the root of the stack, no matter how far back that is.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    popToRoot(opts, done) {\n        return this.removeIndex(1, -1, opts, done);\n    }\n    /**\n     * Removes a component from the navigation stack at the specified index.\n     *\n     * @param startIndex The number to begin removal at.\n     * @param removeCount The number of components to remove.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    removeIndex(startIndex, removeCount = 1, opts, done) {\n        return this.queueTrns({\n            removeStart: startIndex,\n            removeCount,\n            opts,\n        }, done);\n    }\n    /**\n     * Set the root for the current navigation stack to a component.\n     *\n     * @param component The component to set as the root of the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    setRoot(component, componentProps, opts, done) {\n        return this.setPages([{ component, componentProps }], opts, done);\n    }\n    /**\n     * Set the views of the current navigation stack and navigate to the last view.\n     * By default animations are disabled, but they can be enabled by passing options\n     * to the navigation controller. Navigation parameters can also be passed to the\n     * individual pages in the array.\n     *\n     * @param views The list of views to set as the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    setPages(views, opts, done) {\n        opts !== null && opts !== void 0 ? opts : (opts = {});\n        // if animation wasn't set to true then default it to NOT animate\n        if (opts.animated !== true) {\n            opts.animated = false;\n        }\n        return this.queueTrns({\n            insertStart: 0,\n            insertViews: views,\n            removeStart: 0,\n            removeCount: -1,\n            opts,\n        }, done);\n    }\n    /**\n     * Called by the router to update the view.\n     *\n     * @param id The component tag.\n     * @param params The component params.\n     * @param direction A direction hint.\n     * @param animation an AnimationBuilder.\n     *\n     * @return the status.\n     * @internal\n     */\n    setRouteId(id, params, direction, animation) {\n        const active = this.getActiveSync();\n        if (matches(active, id, params)) {\n            return Promise.resolve({\n                changed: false,\n                element: active.element,\n            });\n        }\n        let resolve;\n        const promise = new Promise((r) => (resolve = r));\n        let finish;\n        const commonOpts = {\n            updateURL: false,\n            viewIsReady: (enteringEl) => {\n                let mark;\n                const p = new Promise((r) => (mark = r));\n                resolve({\n                    changed: true,\n                    element: enteringEl,\n                    markVisible: async () => {\n                        mark();\n                        await finish;\n                    },\n                });\n                return p;\n            },\n        };\n        if (direction === 'root') {\n            finish = this.setRoot(id, params, commonOpts);\n        }\n        else {\n            // Look for a view matching the target in the view stack.\n            const viewController = this.views.find((v) => matches(v, id, params));\n            if (viewController) {\n                finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\n            }\n            else if (direction === 'forward') {\n                finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\n            }\n            else if (direction === 'back') {\n                finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\n            }\n        }\n        return promise;\n    }\n    /**\n     * Called by <ion-router> to retrieve the current component.\n     *\n     * @internal\n     */\n    async getRouteId() {\n        const active = this.getActiveSync();\n        if (active) {\n            return {\n                id: active.element.tagName,\n                params: active.params,\n                element: active.element,\n            };\n        }\n        return undefined;\n    }\n    /**\n     * Get the active view.\n     */\n    async getActive() {\n        return this.getActiveSync();\n    }\n    /**\n     * Get the view at the specified index.\n     *\n     * @param index The index of the view.\n     */\n    async getByIndex(index) {\n        return this.views[index];\n    }\n    /**\n     * Returns `true` if the current view can go back.\n     *\n     * @param view The view to check.\n     */\n    async canGoBack(view) {\n        return this.canGoBackSync(view);\n    }\n    /**\n     * Get the previous view.\n     *\n     * @param view The view to get.\n     */\n    async getPrevious(view) {\n        return this.getPreviousSync(view);\n    }\n    /**\n     * Returns the number of views in the stack.\n     */\n    async getLength() {\n        return Promise.resolve(this.views.length);\n    }\n    getActiveSync() {\n        return this.views[this.views.length - 1];\n    }\n    canGoBackSync(view = this.getActiveSync()) {\n        return !!(view && this.getPreviousSync(view));\n    }\n    getPreviousSync(view = this.getActiveSync()) {\n        if (!view) {\n            return undefined;\n        }\n        const views = this.views;\n        const index = views.indexOf(view);\n        return index > 0 ? views[index - 1] : undefined;\n    }\n    /**\n     * Adds a navigation stack change to the queue and schedules it to run.\n     *\n     * @returns Whether the transition succeeds.\n     */\n    async queueTrns(ti, done) {\n        var _a, _b;\n        if (this.isTransitioning && ((_a = ti.opts) === null || _a === void 0 ? void 0 : _a.skipIfBusy)) {\n            return false;\n        }\n        const promise = new Promise((resolve, reject) => {\n            ti.resolve = resolve;\n            ti.reject = reject;\n        });\n        ti.done = done;\n        /**\n         * If using router, check to see if navigation hooks\n         * will allow us to perform this transition. This\n         * is required in order for hooks to work with\n         * the ion-back-button or swipe to go back.\n         */\n        if (ti.opts && ti.opts.updateURL !== false && this.useRouter) {\n            const router = document.querySelector('ion-router');\n            if (router) {\n                const canTransition = await router.canTransition();\n                if (canTransition === false) {\n                    return false;\n                }\n                if (typeof canTransition === 'string') {\n                    router.push(canTransition, ti.opts.direction || 'back');\n                    return false;\n                }\n            }\n        }\n        // Normalize empty\n        if (((_b = ti.insertViews) === null || _b === void 0 ? void 0 : _b.length) === 0) {\n            ti.insertViews = undefined;\n        }\n        // Enqueue transition instruction\n        this.transInstr.push(ti);\n        // if there isn't a transition already happening\n        // then this will kick off this transition\n        this.nextTrns();\n        return promise;\n    }\n    success(result, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        if (ti.done) {\n            ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n        }\n        ti.resolve(result.hasCompleted);\n        if (ti.opts.updateURL !== false && this.useRouter) {\n            const router = document.querySelector('ion-router');\n            if (router) {\n                const direction = result.direction === 'back' ? 'back' : 'forward';\n                router.navChanged(direction);\n            }\n        }\n    }\n    failed(rejectReason, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        this.transInstr.length = 0;\n        this.fireError(rejectReason, ti);\n    }\n    fireError(rejectReason, ti) {\n        if (ti.done) {\n            ti.done(false, false, rejectReason);\n        }\n        if (ti.reject && !this.destroyed) {\n            ti.reject(rejectReason);\n        }\n        else {\n            ti.resolve(false);\n        }\n    }\n    /**\n     * Consumes the next transition in the queue.\n     *\n     * @returns whether the transition is executed.\n     */\n    nextTrns() {\n        // this is the framework's bread 'n butta function\n        // only one transition is allowed at any given time\n        if (this.isTransitioning) {\n            return false;\n        }\n        // there is no transition happening right now, executes the next instructions.\n        const ti = this.transInstr.shift();\n        if (!ti) {\n            return false;\n        }\n        this.runTransition(ti);\n        return true;\n    }\n    /** Executes all the transition instruction from the queue. */\n    async runTransition(ti) {\n        try {\n            // set that this nav is actively transitioning\n            this.ionNavWillChange.emit();\n            this.isTransitioning = true;\n            this.prepareTI(ti);\n            const leavingView = this.getActiveSync();\n            const enteringView = this.getEnteringView(ti, leavingView);\n            if (!leavingView && !enteringView) {\n                throw new Error('no views in the stack to be removed');\n            }\n            if (enteringView && enteringView.state === VIEW_STATE_NEW) {\n                await enteringView.init(this.el);\n            }\n            this.postViewInit(enteringView, leavingView, ti);\n            // Needs transition?\n            const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) && enteringView !== leavingView;\n            if (requiresTransition && ti.opts && leavingView) {\n                const isBackDirection = ti.opts.direction === 'back';\n                /**\n                 * If heading back, use the entering page's animation\n                 * unless otherwise specified by the developer.\n                 */\n                if (isBackDirection) {\n                    ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView === null || enteringView === void 0 ? void 0 : enteringView.animationBuilder);\n                }\n                leavingView.animationBuilder = ti.opts.animationBuilder;\n            }\n            let result;\n            if (requiresTransition) {\n                result = await this.transition(enteringView, leavingView, ti);\n            }\n            else {\n                // transition is not required, so we are already done!\n                // they're inserting/removing the views somewhere in the middle or\n                // beginning, so visually nothing needs to animate/transition\n                // resolve immediately because there's no animation that's happening\n                result = {\n                    hasCompleted: true,\n                    requiresTransition: false,\n                };\n            }\n            this.success(result, ti);\n            this.ionNavDidChange.emit();\n        }\n        catch (rejectReason) {\n            this.failed(rejectReason, ti);\n        }\n        this.isTransitioning = false;\n        this.nextTrns();\n    }\n    prepareTI(ti) {\n        var _a, _b;\n        var _c;\n        const viewsLength = this.views.length;\n        (_a = ti.opts) !== null && _a !== void 0 ? _a : (ti.opts = {});\n        (_b = (_c = ti.opts).delegate) !== null && _b !== void 0 ? _b : (_c.delegate = this.delegate);\n        if (ti.removeView !== undefined) {\n            assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n            assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n            const index = this.views.indexOf(ti.removeView);\n            if (index < 0) {\n                throw new Error('removeView was not found');\n            }\n            ti.removeStart += index;\n        }\n        if (ti.removeStart !== undefined) {\n            if (ti.removeStart < 0) {\n                ti.removeStart = viewsLength - 1;\n            }\n            if (ti.removeCount < 0) {\n                ti.removeCount = viewsLength - ti.removeStart;\n            }\n            ti.leavingRequiresTransition = ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n        }\n        if (ti.insertViews) {\n            // allow -1 to be passed in to auto push it on the end\n            // and clean up the index if it's larger then the size of the stack\n            if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n                ti.insertStart = viewsLength;\n            }\n            ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n        }\n        const insertViews = ti.insertViews;\n        if (!insertViews) {\n            return;\n        }\n        assert(insertViews.length > 0, 'length can not be zero');\n        const viewControllers = convertToViews(insertViews);\n        if (viewControllers.length === 0) {\n            throw new Error('invalid views to insert');\n        }\n        // Check all the inserted view are correct\n        for (const view of viewControllers) {\n            view.delegate = ti.opts.delegate;\n            const nav = view.nav;\n            if (nav && nav !== this) {\n                throw new Error('inserted view was already inserted');\n            }\n            if (view.state === VIEW_STATE_DESTROYED) {\n                throw new Error('inserted view was already destroyed');\n            }\n        }\n        ti.insertViews = viewControllers;\n    }\n    /**\n     * Returns the view that will be entered considering the transition instructions.\n     *\n     * @param ti The instructions.\n     * @param leavingView The view being left or undefined if none.\n     *\n     * @returns The view that will be entered, undefined if none.\n     */\n    getEnteringView(ti, leavingView) {\n        // The last inserted view will be entered when view are inserted.\n        const insertViews = ti.insertViews;\n        if (insertViews !== undefined) {\n            return insertViews[insertViews.length - 1];\n        }\n        // When views are deleted, we will enter the last view that is not removed and not the view being left.\n        const removeStart = ti.removeStart;\n        if (removeStart !== undefined) {\n            const views = this.views;\n            const removeEnd = removeStart + ti.removeCount;\n            for (let i = views.length - 1; i >= 0; i--) {\n                const view = views[i];\n                if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n                    return view;\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Adds and Removes the views from the navigation stack.\n     *\n     * @param enteringView The view being entered.\n     * @param leavingView The view being left.\n     * @param ti The instructions.\n     */\n    postViewInit(enteringView, leavingView, ti) {\n        var _a, _b, _c;\n        assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n        assert(ti.resolve, 'resolve must be valid');\n        assert(ti.reject, 'reject must be valid');\n        // Compute the views to remove.\n        const opts = ti.opts;\n        const { insertViews, removeStart, removeCount } = ti;\n        /** Records the view to destroy */\n        let destroyQueue;\n        // there are views to remove\n        if (removeStart !== undefined && removeCount !== undefined) {\n            assert(removeStart >= 0, 'removeStart can not be negative');\n            assert(removeCount >= 0, 'removeCount can not be negative');\n            destroyQueue = [];\n            for (let i = removeStart; i < removeStart + removeCount; i++) {\n                const view = this.views[i];\n                if (view !== undefined && view !== enteringView && view !== leavingView) {\n                    destroyQueue.push(view);\n                }\n            }\n            // default the direction to \"back\"\n            (_a = opts.direction) !== null && _a !== void 0 ? _a : (opts.direction = 'back');\n        }\n        const finalNumViews = this.views.length + ((_b = insertViews === null || insertViews === void 0 ? void 0 : insertViews.length) !== null && _b !== void 0 ? _b : 0) - (removeCount !== null && removeCount !== void 0 ? removeCount : 0);\n        assert(finalNumViews >= 0, 'final balance can not be negative');\n        if (finalNumViews === 0) {\n            console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\n            throw new Error('navigation stack needs at least one root page');\n        }\n        // At this point the transition can not be rejected, any throw should be an error\n        // Insert the new views in the stack.\n        if (insertViews) {\n            // add the views to the\n            let insertIndex = ti.insertStart;\n            for (const view of insertViews) {\n                this.insertViewAt(view, insertIndex);\n                insertIndex++;\n            }\n            if (ti.enteringRequiresTransition) {\n                // default to forward if not already set\n                (_c = opts.direction) !== null && _c !== void 0 ? _c : (opts.direction = 'forward');\n            }\n        }\n        // if the views to be removed are in the beginning or middle\n        // and there is not a view that needs to visually transition out\n        // then just destroy them and don't transition anything\n        // batch all of lifecycles together\n        // let's make sure, callbacks are zoned\n        if (destroyQueue && destroyQueue.length > 0) {\n            for (const view of destroyQueue) {\n                lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n                lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n                lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            }\n            // once all lifecycle events has been delivered, we can safely detroy the views\n            for (const view of destroyQueue) {\n                this.destroyView(view);\n            }\n        }\n    }\n    async transition(enteringView, leavingView, ti) {\n        // we should animate (duration > 0) if the pushed page is not the first one (startup)\n        // or if it is a portal (modal, actionsheet, etc.)\n        const opts = ti.opts;\n        const progressCallback = opts.progressAnimation\n            ? (ani) => {\n                /**\n                 * Because this progress callback is called asynchronously\n                 * it is possible for the gesture to start and end before\n                 * the animation is ever set. In that scenario, we should\n                 * immediately call progressEnd so that the transition promise\n                 * resolves and the gesture does not get locked up.\n                 */\n                if (ani !== undefined && !this.gestureOrAnimationInProgress) {\n                    this.gestureOrAnimationInProgress = true;\n                    ani.onFinish(() => {\n                        this.gestureOrAnimationInProgress = false;\n                    }, { oneTimeCallback: true });\n                    /**\n                     * Playing animation to beginning\n                     * with a duration of 0 prevents\n                     * any flickering when the animation\n                     * is later cleaned up.\n                     */\n                    ani.progressEnd(0, 0, 0);\n                }\n                else {\n                    this.sbAni = ani;\n                }\n            }\n            : undefined;\n        const mode = getIonMode(this);\n        const enteringEl = enteringView.element;\n        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n        const leavingEl = leavingView && leavingView.element;\n        const animationOpts = Object.assign(Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\n            leavingEl }, opts), { animationBuilder: opts.animationBuilder || this.animation || config.get('navAnimation') });\n        const { hasCompleted } = await transition(animationOpts);\n        return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\n    }\n    transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n        /**\n         * If the transition did not complete, the leavingView will still be the active\n         * view on the stack. Otherwise unmount all the views after the enteringView.\n         */\n        const activeView = hasCompleted ? enteringView : leavingView;\n        if (activeView) {\n            this.unmountInactiveViews(activeView);\n        }\n        return {\n            hasCompleted,\n            requiresTransition: true,\n            enteringView,\n            leavingView,\n            direction: opts.direction,\n        };\n    }\n    /**\n     * Inserts a view at the specified index.\n     *\n     * When the view already is in the stack it will be moved to the new position.\n     *\n     * @param view The view to insert.\n     * @param index The index where to insert the view.\n     */\n    insertViewAt(view, index) {\n        const views = this.views;\n        const existingIndex = views.indexOf(view);\n        if (existingIndex > -1) {\n            assert(view.nav === this, 'view is not part of the nav');\n            // The view already in the stack, removes it.\n            views.splice(existingIndex, 1);\n            // and add it back at the requested index.\n            views.splice(index, 0, view);\n        }\n        else {\n            assert(!view.nav, 'nav is used');\n            // this is a new view to add to the stack\n            // create the new entering view\n            view.nav = this;\n            views.splice(index, 0, view);\n        }\n    }\n    /**\n     * Removes a view from the stack.\n     *\n     * @param view The view to remove.\n     */\n    removeView(view) {\n        assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n        const views = this.views;\n        const index = views.indexOf(view);\n        assert(index > -1, 'view must be part of the stack');\n        if (index >= 0) {\n            views.splice(index, 1);\n        }\n    }\n    destroyView(view) {\n        view._destroy();\n        this.removeView(view);\n    }\n    /**\n     * Unmounts all inactive views after the specified active view.\n     *\n     * DOM WRITE\n     *\n     * @param activeView The view that is actively visible in the stack. Used to calculate which views to unmount.\n     */\n    unmountInactiveViews(activeView) {\n        // ok, cleanup time!! Destroy all of the views that are\n        // INACTIVE and come after the active view\n        // only do this if the views exist, though\n        if (this.destroyed) {\n            return;\n        }\n        const views = this.views;\n        const activeViewIndex = views.indexOf(activeView);\n        for (let i = views.length - 1; i >= 0; i--) {\n            const view = views[i];\n            /**\n             * When inserting multiple views via insertPages\n             * the last page will be transitioned to, but the\n             * others will not be. As a result, a DOM element\n             * will only be created for the last page inserted.\n             * As a result, it is possible to have views in the\n             * stack that do not have `view.element` yet.\n             */\n            const element = view.element;\n            if (element) {\n                if (i > activeViewIndex) {\n                    // this view comes after the active view\n                    // let's unload it\n                    lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n                    this.destroyView(view);\n                }\n                else if (i < activeViewIndex) {\n                    // this view comes before the active view\n                    // and it is not a portal then ensure it is hidden\n                    setPageHidden(element, true);\n                }\n            }\n        }\n    }\n    canStart() {\n        return (!this.gestureOrAnimationInProgress &&\n            !!this.swipeGesture &&\n            !this.isTransitioning &&\n            this.transInstr.length === 0 &&\n            this.canGoBackSync());\n    }\n    onStart() {\n        this.gestureOrAnimationInProgress = true;\n        this.pop({ direction: 'back', progressAnimation: true });\n    }\n    onMove(stepValue) {\n        if (this.sbAni) {\n            this.sbAni.progressStep(stepValue);\n        }\n    }\n    onEnd(shouldComplete, stepValue, dur) {\n        if (this.sbAni) {\n            this.sbAni.onFinish(() => {\n                this.gestureOrAnimationInProgress = false;\n            }, { oneTimeCallback: true });\n            // Account for rounding errors in JS\n            let newStepValue = shouldComplete ? -0.001 : 0.001;\n            /**\n             * Animation will be reversed here, so need to\n             * reverse the easing curve as well\n             *\n             * Additionally, we need to account for the time relative\n             * to the new easing curve, as `stepValue` is going to be given\n             * in terms of a linear curve.\n             */\n            if (!shouldComplete) {\n                this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n                newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n            }\n            else {\n                newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n            }\n            this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n        }\n        else {\n            this.gestureOrAnimationInProgress = false;\n        }\n    }\n    render() {\n        return h(\"slot\", { key: 'e9d99a8a0b84f02f9964d8143cd5e647e43334f9' });\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"swipeGesture\": [\"swipeGestureChanged\"],\n        \"root\": [\"rootChanged\"]\n    }; }\n};\nNav.style = IonNavStyle0;\n\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\n    const nav = el.closest('ion-nav');\n    if (nav) {\n        if (routerDirection === 'forward') {\n            if (component !== undefined) {\n                return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n            }\n        }\n        else if (routerDirection === 'root') {\n            if (component !== undefined) {\n                return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n            }\n        }\n        else if (routerDirection === 'back') {\n            return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n        }\n    }\n    return Promise.resolve(false);\n};\n\nconst NavLink = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.onClick = () => {\n            return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\n        };\n        this.component = undefined;\n        this.componentProps = undefined;\n        this.routerDirection = 'forward';\n        this.routerAnimation = undefined;\n    }\n    render() {\n        return h(Host, { key: '42c23dcdec5fdb25defebaf6e8a9fa75754ff8eb', onClick: this.onClick });\n    }\n    get el() { return getElement(this); }\n};\n\nexport { Nav as ion_nav, NavLink as ion_nav_link };\n"],"names":["r","registerInstance","d","createEvent","h","i","getElement","f","Host","g","getTimeGivenProgression","m","assert","s","shallowEqualStringMap","l","lifecycle","t","transition","setPageHidden","LIFECYCLE_WILL_UNLOAD","b","LIFECYCLE_WILL_LEAVE","c","LIFECYCLE_DID_LEAVE","getIonMode","config","a","attachComponent","VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","constructor","component","params","state","init","container","_this","_asyncToGenerator","element","delegate","_destroy","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","convertToView","page","convertToViews","pages","map","componentProps","filter","v","navCss","IonNavStyle0","Nav","hostRef","ionNavWillLoad","ionNavWillChange","ionNavDidChange","transInstr","gestureOrAnimationInProgress","useRouter","isTransitioning","destroyed","views","didLoad","swipeGesture","animated","animation","rootParams","root","swipeGestureChanged","gesture","enable","rootChanged","setRoot","componentWillLoad","document","querySelector","el","closest","mode","getBoolean","emit","componentDidLoad","_this2","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","connectedCallback","disconnectedCallback","destroy","length","push","opts","done","insert","insertIndex","insertPages","insertComponents","queueTrns","insertStart","insertViews","pop","removeIndex","popTo","indexOrViewCtrl","ti","removeStart","removeCount","removeView","popToRoot","startIndex","setPages","setRouteId","direction","active","getActiveSync","Promise","resolve","changed","promise","finish","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","_ref","apply","arguments","viewController","find","Object","assign","animationBuilder","getRouteId","_this3","tagName","getActive","_this4","getByIndex","index","_this5","canGoBack","_this6","canGoBackSync","getPrevious","_this7","getPreviousSync","getLength","_this8","indexOf","_this9","_a","_b","skipIfBusy","reject","router","canTransition","nextTrns","success","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","failed","rejectReason","shift","runTransition","_this10","prepareTI","getEnteringView","Error","postViewInit","enteringRequiresTransition","leavingRequiresTransition","isBackDirection","_c","viewsLength","viewControllers","removeEnd","destroyQueue","finalNumViews","console","warn","insertViewAt","destroyView","_this11","progressCallback","progressAnimation","ani","onFinish","oneTimeCallback","progressEnd","sbAni","leavingEl","animationOpts","showGoBack","baseEl","get","transitionFinish","activeView","unmountInactiveViews","existingIndex","splice","activeViewIndex","stepValue","progressStep","shouldComplete","dur","newStepValue","easing","render","key","watchers","style","navLink","routerDirection","routerAnimation","NavLink","onClick","ion_nav","ion_nav_link"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}