{"ast":null,"code":"// src/app/settings/settings.page.ts\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SettingsPage = class SettingsPage {\n  constructor(authService) {\n    this.authService = authService;\n    this.user = {}; // Replace with your User type if defined\n    this.newProfilePicture = null;\n  }\n  ngOnInit() {\n    this.user = this.authService.getCurrentUser();\n  }\n  onFileChange(event) {\n    const file = event.target.files[0];\n    if (file) {\n      this.newProfilePicture = file;\n      this.user.profilePicture = file; // Set the file in the user object\n    }\n  }\n  updateUserInfo() {\n    const updatedUserData = {\n      id: this.user.id,\n      name: this.user.name,\n      username: this.user.username,\n      email: this.user.email,\n      profilePicture: this.newProfilePicture // Include the profile picture\n    };\n    // Ensure that updateUser is called with correct number of arguments\n    this.authService.updateUser(updatedUserData).subscribe(response => {\n      console.log('User information updated successfully:', response);\n      alert('User updated successfully');\n    }, error => {\n      console.error('Error updating user information:', error);\n      alert('Error updating user');\n    });\n  }\n};\nSettingsPage = __decorate([Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss']\n})], SettingsPage);\nexport { SettingsPage };","map":{"version":3,"names":["Component","SettingsPage","constructor","authService","user","newProfilePicture","ngOnInit","getCurrentUser","onFileChange","event","file","target","files","profilePicture","updateUserInfo","updatedUserData","id","name","username","email","updateUser","subscribe","response","console","log","alert","error","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/user/Documents/Workspace/englishApp/englishAppFrontend/src/app/settings/settings.page.ts"],"sourcesContent":["// src/app/settings/settings.page.ts\n\nimport { Component } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage {\n  user: any = {}; // Replace with your User type if defined\n  newProfilePicture: File | null = null;\n\n  constructor(private authService: AuthenticationService) {}\n\n  ngOnInit() {\n    this.user = this.authService.getCurrentUser();\n  }\n\n  onFileChange(event: any) {\n    const file = event.target.files[0];\n    if (file) {\n      this.newProfilePicture = file;\n      this.user.profilePicture = file; // Set the file in the user object\n    }\n  }\n\n  updateUserInfo() {\n    const updatedUserData = {\n      id: this.user.id,\n      name: this.user.name,\n      username: this.user.username,\n      email: this.user.email,\n      profilePicture: this.newProfilePicture, // Include the profile picture\n    };\n\n    // Ensure that updateUser is called with correct number of arguments\n    this.authService.updateUser(updatedUserData).subscribe(\n      (response: any) => {\n        console.log('User information updated successfully:', response);\n        alert('User updated successfully');\n      },\n      (error: any) => {\n        console.error('Error updating user information:', error);\n        alert('Error updating user');\n      }\n    );\n  }\n}\n"],"mappings":"AAAA;;AAEA,SAASA,SAAS,QAAQ,eAAe;AAQlC,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAIvBC,YAAoBC,WAAkC;IAAlC,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,IAAI,GAAQ,EAAE,CAAC,CAAC;IAChB,KAAAC,iBAAiB,GAAgB,IAAI;EAEoB;EAEzDC,QAAQA,CAAA;IACN,IAAI,CAACF,IAAI,GAAG,IAAI,CAACD,WAAW,CAACI,cAAc,EAAE;EAC/C;EAEAC,YAAYA,CAACC,KAAU;IACrB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACR,IAAI,CAACL,iBAAiB,GAAGK,IAAI;MAC7B,IAAI,CAACN,IAAI,CAACS,cAAc,GAAGH,IAAI,CAAC,CAAC;IACnC;EACF;EAEAI,cAAcA,CAAA;IACZ,MAAMC,eAAe,GAAG;MACtBC,EAAE,EAAE,IAAI,CAACZ,IAAI,CAACY,EAAE;MAChBC,IAAI,EAAE,IAAI,CAACb,IAAI,CAACa,IAAI;MACpBC,QAAQ,EAAE,IAAI,CAACd,IAAI,CAACc,QAAQ;MAC5BC,KAAK,EAAE,IAAI,CAACf,IAAI,CAACe,KAAK;MACtBN,cAAc,EAAE,IAAI,CAACR,iBAAiB,CAAE;KACzC;IAED;IACA,IAAI,CAACF,WAAW,CAACiB,UAAU,CAACL,eAAe,CAAC,CAACM,SAAS,CACnDC,QAAa,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEF,QAAQ,CAAC;MAC/DG,KAAK,CAAC,2BAA2B,CAAC;IACpC,CAAC,EACAC,KAAU,IAAI;MACbH,OAAO,CAACG,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDD,KAAK,CAAC,qBAAqB,CAAC;IAC9B,CAAC,CACF;EACH;CACD;AAvCYxB,YAAY,GAAA0B,UAAA,EALxB3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACW7B,YAAY,CAuCxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}