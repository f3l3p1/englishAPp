{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  var _AuthInterceptor;\n  class AuthInterceptor {\n    intercept(req, next) {\n      const authToken = localStorage.getItem('token');\n      const authReq = authToken ? req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${authToken}`\n        }\n      }) : req;\n      return next.handle(authReq);\n    }\n  }\n  _AuthInterceptor = AuthInterceptor;\n  _AuthInterceptor.ɵfac = function AuthInterceptor_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _AuthInterceptor)();\n  };\n  _AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _AuthInterceptor,\n    factory: _AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":{"version":3,"names":["AuthInterceptor","_AuthInterceptor","intercept","req","next","authToken","localStorage","getItem","authReq","clone","setHeaders","Authorization","handle","factory","ɵfac"],"sources":["/Users/user/Documents/Workspace/englishApp/englishAppFrontend/src/app/services/interceptors/auth.interceptor.ts"],"sourcesContent":["// src/app/services/interceptors/auth.interceptor.ts\n\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const authToken = localStorage.getItem('token');\n    const authReq = authToken ? req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }) : req;\n    return next.handle(authReq);\n  }\n}\n"],"mappings":";AAOA,WAAaA,eAAe;EAAA,IAAAC,gBAAA;EAAtB,MAAOD,eAAe;IAC1BE,SAASA,CAACC,GAAqB,EAAEC,IAAiB;MAChD,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC/C,MAAMC,OAAO,GAAGH,SAAS,GAAGF,GAAG,CAACM,KAAK,CAAC;QACpCC,UAAU,EAAE;UACVC,aAAa,EAAE,UAAUN,SAAS;;OAErC,CAAC,GAAGF,GAAG;MACR,OAAOC,IAAI,CAACQ,MAAM,CAACJ,OAAO,CAAC;IAC7B;;qBATWR,eAAe;;qCAAfA,gBAAe;EAAA;;WAAfA,gBAAe;IAAAa,OAAA,EAAfb,gBAAe,CAAAc;EAAA;EAAA,OAAfd,eAAe;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}