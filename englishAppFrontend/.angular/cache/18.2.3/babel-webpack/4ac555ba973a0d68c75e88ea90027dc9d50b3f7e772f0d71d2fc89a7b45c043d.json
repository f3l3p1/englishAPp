{"ast":null,"code":"// src/app/user-information/user-information.component.ts\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet UserInformationComponent = class UserInformationComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.user = null;\n    this.currentCourse = null; // Use a more specific type if available\n    this.pastSessions = []; // Initialize as an empty array\n  }\n  ngOnInit() {\n    this.loadUserData();\n    this.loadCurrentCourse();\n    this.loadPastSessions();\n  }\n  loadUserData() {\n    this.authService.getCurrentUser().subscribe(user => {\n      this.user = user;\n      console.log('User:', this.user);\n    }, error => {\n      console.error('Error fetching user data:', error);\n    });\n  }\n  loadCurrentCourse() {\n    this.authService.getCurrentCourse().subscribe(course => {\n      this.currentCourse = course;\n      console.log('Current Course:', this.currentCourse);\n    }, error => {\n      console.error('Error fetching current course:', error);\n    });\n  }\n  loadPastSessions() {\n    this.authService.getPastSessions().subscribe(sessions => {\n      this.pastSessions = sessions;\n      console.log('Past Sessions:', this.pastSessions);\n    }, error => {\n      console.error('Error fetching past sessions:', error);\n    });\n  }\n  goToCourseDetails(courseId) {\n    this.router.navigate([`/courses/${courseId}`]);\n  }\n  goToComments(sessionId) {\n    this.router.navigate([`/comments/${sessionId}`]);\n  }\n  isActive(page) {\n    return this.router.url === `/${page}`;\n  }\n};\nUserInformationComponent = __decorate([Component({\n  selector: 'app-user-information',\n  templateUrl: './user-information.component.html',\n  styleUrls: ['./user-information.component.scss']\n})], UserInformationComponent);\nexport { UserInformationComponent };","map":{"version":3,"names":["Component","UserInformationComponent","constructor","authService","router","user","currentCourse","pastSessions","ngOnInit","loadUserData","loadCurrentCourse","loadPastSessions","getCurrentUser","subscribe","console","log","error","getCurrentCourse","course","getPastSessions","sessions","goToCourseDetails","courseId","navigate","goToComments","sessionId","isActive","page","url","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/user/Documents/Workspace/englishApp/englishAppFrontend/src/app/user-information/user-information.component.ts"],"sourcesContent":["// src/app/user-information/user-information.component.ts\n\nimport { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user.model';\n\n@Component({\n  selector: 'app-user-information',\n  templateUrl: './user-information.component.html',\n  styleUrls: ['./user-information.component.scss'],\n})\nexport class UserInformationComponent implements OnInit {\n  user: User | null = null;\n  currentCourse: any = null; // Use a more specific type if available\n  pastSessions: any[] = []; // Initialize as an empty array\n\n  constructor(private authService: AuthenticationService, private router: Router) {}\n\n  ngOnInit() {\n    this.loadUserData();\n    this.loadCurrentCourse();\n    this.loadPastSessions();\n  }\n\n  loadUserData() {\n    this.authService.getCurrentUser().subscribe(\n      (user: User | null) => {\n        this.user = user;\n        console.log('User:', this.user);\n      },\n      (error: any) => {\n        console.error('Error fetching user data:', error);\n      }\n    );\n  }\n\n  loadCurrentCourse() {\n    this.authService.getCurrentCourse().subscribe(\n      (course: any) => {  // Replace 'any' with a specific type if known\n        this.currentCourse = course;\n        console.log('Current Course:', this.currentCourse);\n      },\n      (error: any) => {\n        console.error('Error fetching current course:', error);\n      }\n    );\n  }\n\n  loadPastSessions() {\n    this.authService.getPastSessions().subscribe(\n      (sessions: any[]) => { // Use a specific type if available\n        this.pastSessions = sessions;\n        console.log('Past Sessions:', this.pastSessions);\n      },\n      (error: any) => {\n        console.error('Error fetching past sessions:', error);\n      }\n    );\n  }\n\n  goToCourseDetails(courseId: string) {\n    this.router.navigate([`/courses/${courseId}`]);\n  }\n\n  goToComments(sessionId: string) {\n    this.router.navigate([`/comments/${sessionId}`]);\n  }\n\n  isActive(page: string): boolean {\n    return this.router.url === `/${page}`;\n  }\n}\n"],"mappings":"AAAA;;AAEA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAKnCC,YAAoBC,WAAkC,EAAUC,MAAc;IAA1D,KAAAD,WAAW,GAAXA,WAAW;IAAiC,KAAAC,MAAM,GAANA,MAAM;IAJtE,KAAAC,IAAI,GAAgB,IAAI;IACxB,KAAAC,aAAa,GAAQ,IAAI,CAAC,CAAC;IAC3B,KAAAC,YAAY,GAAU,EAAE,CAAC,CAAC;EAEuD;EAEjFC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;IACnB,IAAI,CAACC,iBAAiB,EAAE;IACxB,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAF,YAAYA,CAAA;IACV,IAAI,CAACN,WAAW,CAACS,cAAc,EAAE,CAACC,SAAS,CACxCR,IAAiB,IAAI;MACpB,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChBS,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACV,IAAI,CAAC;IACjC,CAAC,EACAW,KAAU,IAAI;MACbF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CACF;EACH;EAEAN,iBAAiBA,CAAA;IACf,IAAI,CAACP,WAAW,CAACc,gBAAgB,EAAE,CAACJ,SAAS,CAC1CK,MAAW,IAAI;MACd,IAAI,CAACZ,aAAa,GAAGY,MAAM;MAC3BJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACT,aAAa,CAAC;IACpD,CAAC,EACAU,KAAU,IAAI;MACbF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD,CAAC,CACF;EACH;EAEAL,gBAAgBA,CAAA;IACd,IAAI,CAACR,WAAW,CAACgB,eAAe,EAAE,CAACN,SAAS,CACzCO,QAAe,IAAI;MAClB,IAAI,CAACb,YAAY,GAAGa,QAAQ;MAC5BN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACR,YAAY,CAAC;IAClD,CAAC,EACAS,KAAU,IAAI;MACbF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CACF;EACH;EAEAK,iBAAiBA,CAACC,QAAgB;IAChC,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,YAAYD,QAAQ,EAAE,CAAC,CAAC;EAChD;EAEAE,YAAYA,CAACC,SAAiB;IAC5B,IAAI,CAACrB,MAAM,CAACmB,QAAQ,CAAC,CAAC,aAAaE,SAAS,EAAE,CAAC,CAAC;EAClD;EAEAC,QAAQA,CAACC,IAAY;IACnB,OAAO,IAAI,CAACvB,MAAM,CAACwB,GAAG,KAAK,IAAID,IAAI,EAAE;EACvC;CACD;AA5DY1B,wBAAwB,GAAA4B,UAAA,EALpC7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,C,EACW/B,wBAAwB,CA4DpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}