export declare type InquirerSearchSource = (previousAnswers: any, input: string) => Promise<any>;
export interface IFuzzySearch {
    displayString: string;
}
export interface IMapAstQuery extends IFuzzySearch {
    path: string;
    matches: string[];
    matchesLength: number;
    isMatch: boolean;
}
export declare function autoCompleteDecoratorFiles(choices: IMapAstQuery[]): Promise<IMapAstQuery>;
export declare function fuzzySearch({ choices }: {
    choices: IFuzzySearch[];
}): (input: string) => Promise<{
    value: IFuzzySearch;
    name: string;
    short: string;
}[]>;
export declare function autoCompletePrompt<T extends Record<string, any>>(source: InquirerSearchSource, { message, // prompt for selection
key, // selection will be under this key
pageSize, suggestOnly, }: {
    message: string;
    key?: string;
    pageSize?: number;
    suggestOnly?: boolean;
}): Promise<any>;
